# -*- coding: utf-8 -*-
"""natural_images.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_cU1qCg64-4SnYTBzaIq2js8kHjfIwX3
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
from matplotlib import image as mp_image
from sklearn import metrics
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.model_selection import train_test_split
import os
import shutil

from google.colab import drive
drive.mount('/content/drive')

def load_dataset(data_path):
    import torch
    import torchvision
    import torchvision.transforms as transforms
    transformation = transforms.Compose([
        transforms.Resize((size,size)),
        transforms.RandomHorizontalFlip(0.5),
        transforms.RandomVerticalFlip(0.3),
        transforms.ToTensor(),
        transforms.Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])])
    full_dataset = torchvision.datasets.ImageFolder(
        root=data_path,
        transform=transformation)
    train_size = int(0.7 * len(full_dataset)) # 0.7
    test_size = len(full_dataset) - train_size
    train_dataset, test_dataset = torch.utils.data.random_split(full_dataset, [train_size, test_size])
    train_loader = torch.utils.data.DataLoader(
        train_dataset,
        batch_size=1,
        num_workers=0,
        shuffle=False
    )
    test_loader = torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        num_workers=0,
        shuffle=False
    )
    return train_loader, test_loader

def Output(fw,x,y):
  fw.write("%6d\n"%(y[0]))
  for i in range (x.shape[1]):
    for j in range (x.shape[2]):
      for k in range (x.shape[3]):
        fw.write("%8.5f "%(x[0][i][j][k]))
        if k%16==15:
          fw.write("\n")
      if k%16!=15:
        fw.write("\n")

def Main():
  size=8 # (128,128)
  fw_train=open("/content/drive/MyDrive/Read_Data/natural_images_3_%03d_%03d_train.text"%(size,size),"w")
  fw_test=open("/content/drive/MyDrive/Read_Data/natural_images_3_%03d_%03d_test.text"%(size,size),"w")
  train_data,test_data=load_dataset("/content/drive/MyDrive/Read_Data/data")
  for batch_idx,(img,target) in enumerate(test_data):
    Output(fw_test,img,target)
  for batch_idx,(img,target) in enumerate(train_data):
    Output(fw_train,img,target)
  fw_train.close()
  fw_test.close()

Main()